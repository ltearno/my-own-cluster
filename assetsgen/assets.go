// Code generated by go-bindata.
// sources:
// assets/core-api-guest.d.ts
// assets/core-api-guest.h
// assets/core-api-guest.syms
// assets/core_api_guest.rs
// assets/gpu-api-guest.d.ts
// assets/gpu-api-guest.h
// assets/gpu-api-guest.syms
// assets/gpu_api_guest.rs
// assets/jwt-api-guest.d.ts
// assets/jwt-api-guest.h
// assets/jwt-api-guest.syms
// assets/jwt_api_guest.rs
// assets/my_own_cluster_guest_api.rs
// assets/rest-default-api.js
// DO NOT EDIT!

package assetsgen

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsCoreApiGuestDTs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\x4d\x6f\xe3\x36\x10\xbd\xe7\x57\x0c\x72\x59\x15\xc8\xc6\x97\xa2\x28\x0c\xec\xc1\x69\x76\xdb\x2c\x16\xd9\x00\x4e\xb0\x87\x20\x28\x28\xf1\x49\x62\x2b\x91\xea\x70\xd8\x58\x5d\xe4\xbf\x17\x94\xe4\x58\x91\x1d\x39\xed\x25\xb1\xe6\xe3\xbd\xe1\xf0\xcd\xf0\x64\xb1\x20\x69\x1b\x90\x46\x6e\xac\x11\xe3\xac\xa7\xdc\x31\xd5\x4e\x87\x0a\xf4\x2e\x73\x8c\x77\x27\x8b\x45\x0c\xa4\xd6\x05\xca\x94\xa5\xe0\x41\x52\xa2\xa6\xb4\x25\xa5\xb5\xb1\x05\x49\x69\x3c\x29\x89\x66\x4a\x51\x18\x6b\xa3\xd5\xe5\x31\x87\xe9\x0f\x4f\xb9\xa9\x40\xcb\x0e\x66\xb1\x58\x10\x23\x07\xc3\x66\xa0\x46\x49\xf9\xe1\xf4\x7c\x11\x99\xde\xab\xc6\xbc\x2f\x02\xbc\x9c\xeb\x73\xf1\xa7\x5b\x62\x29\x61\xcf\xc8\x9b\xba\xa9\x5a\x32\x75\xe3\xb8\x67\x1a\xaa\x94\x92\x5d\x28\xca\xce\xc4\xc1\x8a\xa9\x41\xab\x9b\xab\x2e\x35\x73\xd6\x0b\x45\x70\xfa\x40\x8c\xbf\x82\x61\xac\x1a\x93\x9c\x46\xd3\xe9\x0f\x91\x41\x23\xab\x14\x83\xf2\x60\xb3\xd8\x81\x71\x98\x55\x35\x96\x34\x04\xd3\x92\xbe\x9f\x10\x11\x15\x90\x2b\xdb\x04\xb9\x08\x79\x0e\xbe\xd2\x49\x74\xd9\x50\xa7\xe0\xad\xff\x6b\x90\x99\x80\x8c\xa1\x04\x1f\x37\x59\xa9\x6c\x81\x3e\x6a\x1a\xf3\xc8\x66\x2f\x24\x1d\xf0\xb6\x81\x67\xf1\x7c\x02\x2b\x4b\xba\x33\x56\x7e\x5e\x31\xab\xf6\x38\xce\x6f\x50\xfa\x20\x5a\x7f\x5c\x2f\x6c\x6c\x71\x46\x7f\xab\x2a\x3c\x7f\x1e\x47\x5d\x8b\x92\xe0\x7f\x71\x1a\x07\x90\xfd\xb3\x73\x6b\x9b\x00\x76\xa2\x90\xc0\xd6\xf7\xf7\x08\xa5\x35\x2c\x79\xf3\x0f\xc8\xe4\xc4\xf0\xa1\x92\xdf\xd3\x56\xe0\xe9\x51\x79\xb2\x4e\xe8\xfa\xee\xcb\x17\x52\x56\x77\x19\x18\x8a\xa1\x9e\xbc\xcf\x74\x52\x82\x1f\x8d\x47\xc7\x11\x41\x8f\x74\x34\x56\xb5\x6b\xe5\xa1\xca\x06\xf8\xb2\xeb\xa1\x27\x63\xe9\xf3\xfa\xeb\x75\x9c\x9a\x5a\xc9\x2b\x34\x7d\xc3\xfd\x41\xb6\xef\x74\xff\x27\xda\x6d\x9b\x1f\xb6\x3f\xe8\xa9\xc3\x4a\x95\xc7\x4f\x3f\x5e\x22\x8b\x6d\x85\x8d\xff\xf4\xf8\x4a\x26\xb5\xf6\xe1\x1f\xbb\xb8\xc4\x44\x8d\x4e\x95\xd1\xa7\x0e\x75\x16\xc6\x0b\xf8\xa2\x72\xe9\x37\x23\xe5\xb5\xaa\x91\xbc\x94\xc0\x20\xaf\xdb\xb6\xd9\x37\xbe\x11\x39\xf9\x9f\x18\x05\x24\xa6\xdf\x22\x2b\xaf\xf4\x27\x76\xf5\x5e\x79\x87\x13\x2e\xa2\x44\x56\x7e\xdd\x39\xe6\xe2\x9b\x2a\x14\x9f\x86\x99\x4f\x6a\x48\xe9\xf4\xae\xbe\xb8\x96\x76\x5f\x2f\x9b\xe2\x45\xb1\x6c\x33\x77\x66\xad\x44\xed\xbe\x44\x15\xfe\xb3\xdf\xf9\x27\x72\xef\xc8\x4d\x85\xff\x44\x7c\x04\x33\xd8\x88\x7a\xa3\xa4\x9c\x45\xdd\x5f\x56\xfd\xe4\x26\xd3\xfe\x80\x7d\xbc\x45\x9b\x61\x0d\x49\x3a\x91\xee\x6e\xeb\x79\x3d\xbc\xba\x78\x0a\xc8\x1d\x57\x49\xe0\x6a\x46\xb0\x23\x92\x5f\xf7\x49\x8e\x26\xac\x43\xea\x21\x49\xc3\xc8\xcd\x66\x4c\x33\x3f\x55\x0d\x1b\x2b\x97\x48\x43\x91\x08\x36\xf2\x7a\x67\x6e\x4d\x8d\x44\xc3\xcf\x2d\xd8\x9c\x31\xb7\x4d\xc6\x6b\x5f\x55\xd5\xb3\xe2\xde\xa4\x29\xc5\x45\xa8\x61\xc5\x2f\xc9\x58\xb9\x7f\x38\x8b\x6f\xde\x28\xad\x1b\xf1\x97\xbb\x66\xbc\x75\x5d\xf7\x0a\xbd\xee\x6f\x9c\x37\x9b\x28\xc3\xeb\x17\xc5\x74\xe6\xd5\x8e\xba\xb7\xdf\x3f\x4c\x8e\x83\x4d\x7c\x89\x2f\x95\xa8\xb8\x76\x92\x43\xeb\x08\xa2\xbe\x21\xbd\x61\xb7\x69\x93\x26\xfe\x5d\x37\xc8\x66\x24\x6c\xfc\x2d\xab\x0c\xd3\xb7\x70\x98\x16\x01\xbf\xad\x6d\xe3\x51\x9c\xa8\xba\x1f\x92\x01\xcc\xe8\x03\x75\x3c\xfd\x1b\x00\x00\xff\xff\xbd\xce\x22\x3c\x16\x09\x00\x00")

func assetsCoreApiGuestDTsBytes() ([]byte, error) {
	return bindataRead(
		_assetsCoreApiGuestDTs,
		"assets/core-api-guest.d.ts",
	)
}

func assetsCoreApiGuestDTs() (*asset, error) {
	bytes, err := assetsCoreApiGuestDTsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/core-api-guest.d.ts", size: 2326, mode: os.FileMode(436), modTime: time.Unix(1615708949, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCoreApiGuestH = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x4b\x6f\xe3\x36\x10\xbe\xfb\x57\x10\xce\x45\x5a\x04\x5d\xa0\x2d\x7a\xd9\xa2\x40\xb0\xcd\x61\x8b\x3c\x8a\x3c\xd0\xde\x08\x4a\x1c\x59\x6c\x65\x52\x20\x87\xb1\xdd\x5f\x5f\xe8\xe1\x98\x43\x53\xb2\x9b\xa0\xed\xe6\xa6\x99\x6f\x1e\xdf\x70\x38\x1c\x67\x71\xa1\x2a\x2d\xa1\x62\xa5\xb1\xc0\x45\xab\x78\xbd\xb8\x90\x50\x29\x0d\xa1\x68\x71\xa1\x74\xd9\x78\x09\xec\x47\x87\x52\x69\xfc\xa6\xfe\x69\xf1\x0a\xfc\xed\xea\xf1\x96\x5f\xff\xfe\xeb\xfd\xc3\x13\x3b\xfe\x83\x2d\x82\xd5\x8c\x73\x81\x68\x55\xe1\x11\x38\xcf\x32\xef\x40\xe6\x79\x2c\x7d\x51\x4e\x15\xaa\x51\xb8\x63\xd9\x52\x42\x25\x7c\x83\xcb\x3c\xcf\x53\xa1\xf8\xd5\x63\x76\x77\x75\x7b\x9d\x1f\x42\x85\x89\x44\x9e\x61\xdb\x1a\x8b\x5c\x8b\x35\x0c\x56\xb1\xd3\x2f\xb7\x9d\x59\x76\x7b\xff\xf3\xf3\xcd\xf5\x65\xe0\x38\x72\xa4\xd6\xbd\xa3\xb5\x91\xbe\x81\x11\x9e\x1f\x33\x19\x61\xd3\xf1\x3e\xdf\xdf\x3d\x3e\x3d\x3c\x7f\x7e\xba\x7f\xa0\xf5\x8a\x1c\x95\x46\x3b\xb4\xbe\x44\x63\xf3\x7c\xb1\x08\x73\x5d\x76\x27\xb4\xbc\x64\xcb\x15\x20\x57\xba\xf5\xc8\x0b\x5f\x55\x60\xb9\x92\xcb\x9c\x79\xa5\xf1\xbb\x6f\x39\xb2\x84\x3a\xcb\x3f\x4d\xbb\x32\x1e\x67\x7d\xc5\xfa\x49\x67\xa5\x05\x81\xc0\x61\x5b\xd6\x42\xaf\x60\xb4\x08\xdd\xa5\x11\x93\x0e\x37\x56\xcd\xfb\x4b\x02\x32\xa5\x91\xbd\x66\x7b\xc9\xfa\x92\xb2\x17\xa3\x24\xfb\x50\x1a\x8d\xa0\x91\x17\x3b\x04\x77\xc9\x3a\xe4\x5e\xd4\x80\x5e\x61\xfd\x8f\x52\xe1\x35\x08\x79\x46\x46\x23\x2e\x9d\x58\x59\x0b\xcb\x3e\x74\x9d\xc3\x1d\x5a\xa5\x57\x43\x5a\xbd\x60\xc8\x89\x22\x5f\x44\xe3\x29\x74\x90\xbc\x25\x7f\x87\x02\xbd\xe3\xa5\x91\x70\x9a\x44\x00\x8e\x99\x74\x9f\x81\x3a\xff\xb4\xf8\xf8\x91\x59\x40\x6f\xb5\x63\x58\x03\xb3\x20\xa4\x04\xcd\x9c\xfa\x0b\x98\xaa\x98\x05\xe7\x9b\xf1\x18\xd8\x46\x38\xa6\x0d\xb2\xbb\xe7\x9b\x1b\x26\xb4\xec\x2d\xf6\xd1\xc7\x30\x83\xa5\xc1\x1a\xec\x46\x39\x48\x93\xec\xa2\xcc\xb5\x4b\x4a\x1f\x53\x19\xfa\x24\xcc\x6f\xa0\x37\x4a\x5e\xab\x1c\x11\x1c\xb3\x1c\x0e\xda\x31\xa5\xd9\x2f\x8f\xf7\x77\xac\x32\x76\x2d\xf0\xfc\x6c\xc7\x4e\x71\xa7\xb2\xde\xe3\x68\xf6\x53\x87\x5f\x08\x07\x3f\x7c\xcf\x25\xc4\x07\x4d\x14\x59\xd8\x65\xa0\x3b\x91\x24\x7d\xb6\x97\xcd\x77\xda\xe8\x73\x00\x27\x82\x0d\x8a\x2c\xbc\x95\xe3\xb4\x3a\x14\x7b\x10\xcc\xc7\xb1\xb0\x52\x0e\xc1\xf2\xa2\x31\x05\xdf\x28\xac\xfb\xf1\x4b\x2b\x97\x84\x64\x6f\xbb\x78\xfb\x41\x81\xbb\x96\x5a\x10\x05\xb5\x7c\xe7\xd4\x21\x04\x26\x99\x65\xff\x73\x96\xdd\x23\xd1\x57\x18\xa1\xac\xb9\x92\xbc\xb2\x66\x7d\x74\x18\xd3\xa8\xb3\xcf\xe3\x64\x02\x7d\xea\x5c\xb8\xd1\x41\x32\x7c\x84\x79\x77\xf0\xb6\xf1\x2b\x5e\x79\x5d\xa2\x32\x3a\x8c\x48\x14\x24\xcc\x1a\xb0\x36\xf4\x6e\x8d\xa2\x54\xdf\xb5\x02\x6b\x82\xed\x05\x29\xe4\xf9\xbd\xec\x50\x58\x7c\x4d\x8e\xd8\x44\xaa\x94\xb5\x14\x28\x88\x4d\x2f\x48\x21\x51\xac\x1c\xff\xc3\x45\x21\x0e\xd2\x73\x4a\xab\x1a\x38\x2e\xab\x6a\xe0\x2b\x2b\xe9\xfb\xa8\x7a\xdd\xf3\xea\xf2\x08\xc9\x06\xe2\x7f\x89\xee\xdc\x9d\x1a\x9e\xf4\xf8\x16\x0d\xd2\xc9\xa5\xad\x05\xeb\xba\xd9\xa4\x4b\xe0\x0e\x90\x1c\x1d\x55\x91\x37\xe0\x4f\xd8\x85\x93\xa7\xfb\x4c\x0d\xa9\x61\xd7\x09\x80\xe7\x2c\x3f\x5d\xd6\xde\x36\x31\x11\x6f\x1b\x52\x54\x6f\x1b\x52\xa5\xee\xfb\x44\x83\x06\x84\x56\xd3\x5c\x57\xe7\x72\x3d\x33\x0e\x77\xbe\x98\x29\xed\x01\x41\xe8\xb5\x16\x2a\xb5\xa5\x7d\x30\x88\x4e\x04\xb7\x4a\x23\x97\x50\x78\x32\x50\x03\x31\x09\x83\xb0\x45\x7a\x05\x3a\xc1\xe9\x03\x42\x75\xfc\x5e\x74\x32\x52\x39\x09\x8e\x3c\x50\xfd\xf7\xbc\xef\xca\x42\x6a\x17\x0c\xc4\xc1\x12\xf5\x65\x72\x87\x2a\x45\xd3\x24\xc7\x3c\x51\xbc\x71\xb5\x78\xeb\x38\x1e\x8a\x22\xec\xca\xaf\x41\xa3\xe3\xdd\x89\x08\x6b\xc5\x6e\xb0\x3d\x28\x52\x41\xd7\x46\xd2\xf4\x7a\xc1\x1e\x79\x58\xc3\xe2\xd5\x73\xbf\xf0\x8f\xbf\x0b\x53\x6a\xd2\x76\xc6\xa9\x6d\x3f\xb0\xf9\x51\x41\x62\x5d\x8a\xdd\x80\x39\x50\x19\xec\x43\x9a\x31\x62\xbe\x1f\xc6\x7f\x0d\x74\x4f\x56\xb7\x91\x86\x47\x19\xa9\x26\x47\x5c\x01\x28\xf8\x06\x0a\xde\x5a\xb3\xdd\x91\x1d\x97\x68\xa2\xeb\x67\xb6\x3b\xee\x5a\x28\x8f\x5f\x89\x58\x37\xcf\x40\x39\x8e\x56\x94\x24\xf5\xbd\x6c\x7a\x2c\x8f\xcf\x26\xd2\x6b\x10\x88\xff\xe3\xde\x3d\xbd\x4a\x9c\x78\x2b\x8f\xc9\x10\x05\xa1\xa3\xe8\x5b\xa9\x82\x1f\x31\x8b\x0b\xd0\x52\x55\x0b\xc6\x18\xfb\x3b\x00\x00\xff\xff\x93\x64\x77\x79\x20\x13\x00\x00")

func assetsCoreApiGuestHBytes() ([]byte, error) {
	return bindataRead(
		_assetsCoreApiGuestH,
		"assets/core-api-guest.h",
	)
}

func assetsCoreApiGuestH() (*asset, error) {
	bytes, err := assetsCoreApiGuestHBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/core-api-guest.h", size: 4896, mode: os.FileMode(436), modTime: time.Unix(1615708949, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCoreApiGuestSyms = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\x51\x6e\x33\x21\x0c\x84\xdf\x39\xcf\xaf\xff\x3a\x96\x81\x59\xd6\xd2\x06\x90\x6d\x94\xe4\xf6\xd5\x12\x9a\x2a\x69\x2b\xf5\x8d\xf9\xc6\x36\x63\x17\x38\x49\xed\xc3\x29\x8e\x6d\x83\x92\xe4\x70\xb2\x36\xfc\x15\x26\x05\x3b\x08\xb7\xb4\x73\x2d\x58\x4e\xb8\xaa\xfc\x95\xd2\x0e\xce\xbf\x9a\xe6\xec\xc3\x28\xb5\x8c\xa0\xe0\xfc\x6d\xe6\x4f\x70\x8d\xb4\x10\xd9\xf0\xff\x1f\x65\xcc\xfe\xa5\x50\xd7\xb4\x22\xe6\x50\x8a\x47\x8b\x74\x15\xdf\xa9\xf2\xe5\x8d\xcf\xa5\x67\x81\x23\xed\x24\x99\x36\x6d\x97\x47\xe1\xd3\x8a\x77\x87\x11\x1b\x99\xab\xd4\x12\xfa\x31\x0a\x6d\xa3\x26\x97\x56\x97\x92\x03\x61\xd4\xf9\xee\xec\xfb\x6c\x7e\xec\x16\x3a\xd4\xce\x1f\x6b\x02\x19\x7c\x5a\x43\x8f\x17\x5e\xe0\xef\x9a\x6c\xc4\xb3\xbc\xab\x54\xa7\x8c\x38\xca\x6c\x75\xb9\x20\x6c\x8a\xe7\x85\x12\x1f\xc7\x57\x1c\xdc\x7a\x53\xa7\xcc\xce\xe7\x3d\x42\x84\x33\x5d\x11\xa9\x6b\xbb\xdd\x83\x18\xb9\x72\xc2\x33\xb6\x43\x3f\x83\x2f\xf5\x11\x00\x00\xff\xff\x2e\x1f\xe9\xa7\x1c\x02\x00\x00")

func assetsCoreApiGuestSymsBytes() ([]byte, error) {
	return bindataRead(
		_assetsCoreApiGuestSyms,
		"assets/core-api-guest.syms",
	)
}

func assetsCoreApiGuestSyms() (*asset, error) {
	bytes, err := assetsCoreApiGuestSymsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/core-api-guest.syms", size: 540, mode: os.FileMode(436), modTime: time.Unix(1615708949, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCore_api_guestRs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x1b\x6b\x6f\xdb\xc8\xf1\xbb\x7e\xc5\x20\x45\x73\x94\xe1\xd8\x39\xfb\x7a\x30\xe8\xd8\x40\x5b\x04\xe8\x15\xe9\x5d\x71\x87\xde\x97\x43\x40\xac\xc8\x91\xb4\x0d\xb5\x24\xf6\x71\x92\x1a\xf8\xbf\x17\xc3\x97\x96\xe4\x2e\x45\xc9\x4e\xdc\xa4\x22\x90\x58\xda\x79\x3f\x76\xf6\xc1\xd1\xc4\x28\x04\xa5\x93\x30\x8c\xb3\x34\xc5\x58\xf3\x4c\xa8\x30\xfc\x1b\x53\xcb\x7f\xb0\xfc\x76\x07\xe6\x59\x18\x7e\xfc\xab\x91\x2a\x93\xe7\xf0\x33\xb2\xe4\xa1\x04\xce\xb6\x1a\x33\x99\xa0\x0c\xc3\x8f\xef\xb8\xd6\x29\xbe\x15\x09\x67\xa2\x44\xfa\xcb\x56\xa3\x7a\xbb\xd1\x0f\xb7\x93\xc9\xe5\xd9\xd9\x04\xce\xe0\x9b\x38\x93\xf8\x0d\x2c\x0c\x2a\x0d\x7f\xfe\xe7\x0f\x30\xe3\x22\xe1\x62\xa1\x60\x9e\x49\x90\x46\x69\xc2\xa2\x7f\x5c\x43\xcc\x04\xcc\x10\x62\x96\xa6\x98\xc0\x5c\x66\xab\x02\x03\xe2\x2c\x41\x88\xb3\x55\xce\x69\x9c\x0b\x9d\xc1\x9a\xa9\x15\x30\x91\x00\x6e\x30\x36\x1a\x13\x98\x6d\x61\xb5\x7d\x95\xad\xc5\xab\x38\x35\x4a\xa3\xac\x19\x6f\x33\x53\x70\x26\xfd\xb9\x26\x3c\x96\x90\x0a\xa0\x97\x4c\x03\x17\x84\x50\xaa\x02\x2a\x33\x32\x46\x98\xf3\x14\x15\x30\x0d\x7a\x89\x30\xc3\x05\x17\x82\xf0\xc3\x9a\x23\xac\xb2\x04\xc8\xb0\x88\xe5\x3c\x2a\x6c\xbb\x2d\xc6\x49\x44\x7b\x3c\x0c\xcf\x08\x74\x39\x99\x5c\x5e\x02\x5f\xe5\x99\x2c\xb9\x56\x7e\x59\x65\x89\x49\x71\x92\x9b\x59\xc1\x53\xb2\x35\x7c\x9c\x00\x00\xfc\xe1\xb7\x94\x8b\x0f\x01\x99\x19\x95\x64\x51\x89\x0b\x77\xf0\x82\x68\x5f\x4c\xdf\x17\x88\xb8\xd1\x28\x45\x45\x45\x0f\xf1\x9a\x0b\x58\xa0\x8e\xb8\xc8\x8d\x8e\x66\x66\x3e\x47\x19\xf1\x24\x98\xc2\xab\x7b\x30\xd7\x57\xb7\x2e\xe4\xcc\xe8\x91\xd8\xb1\x44\xa6\x31\xc2\x4d\xbc\x64\x62\x81\x15\x89\x1f\x7f\x2d\xb9\x03\xbd\x11\x14\x9a\xeb\xab\x73\x88\x33\xa1\x51\xe8\x88\x32\x4c\x85\x70\x16\x67\x42\x69\x30\x37\x3b\x48\x8a\x62\xa1\x97\x21\x89\x38\x4c\x54\xb4\x44\x96\xf4\x25\x0a\xb6\xc2\x48\x69\xc9\xc5\xa2\x25\xaf\x18\xb7\x84\x9d\xc3\xef\x2c\x35\x4e\xd4\x12\x70\xbc\x62\x4a\x33\x6d\x54\x44\xf9\xdd\xd5\xce\x02\x85\x4e\xc6\x97\x97\x20\x51\x1b\x29\x54\x91\x50\x12\x59\x92\xa0\x00\xc5\xff\x83\xc0\xe7\x20\x51\x99\xb4\x72\x27\xcd\x16\x10\x99\x86\x1f\xff\xf5\xee\x5d\x31\x6b\x88\xa2\x56\x06\x4a\xc9\x25\x65\xa6\x97\x28\xd7\x5c\x61\xd7\x00\xe2\xbf\x2f\x86\xb6\xcc\x10\xce\x56\xa6\xf4\x52\x35\x3c\xe8\xa6\x8e\x35\x95\x4a\x65\xe0\x14\x4d\xd2\xbf\xff\xf2\xd3\x8f\x54\x33\x56\x4c\x8f\x51\xad\x8a\xb9\x6a\xab\xe8\x0d\xcf\x8c\x29\xfc\xfe\xbb\x28\xc1\x22\x14\x28\xe8\x4f\xe2\x8a\x78\x0d\x1a\x13\xf3\x8a\x69\x49\x12\x54\x93\xb1\x97\xde\xe5\xf8\x18\x7e\x12\x17\x9c\x0a\x5b\x34\x4b\xb3\x59\xb4\xe6\x7a\x19\x51\xae\x06\xe3\x13\xb9\x9e\x4a\x7a\x9b\x3b\x29\x5a\x70\x27\xe5\xe3\xa6\x67\xcb\x82\xe0\xb9\xb5\xa1\xaa\x57\xb8\x52\x63\xbc\x8c\x78\x12\xd1\x8a\x73\x98\x4b\xf7\xf3\x2e\x54\x8c\x98\xaa\xb8\x3d\x9e\x73\x9e\x9a\x45\x34\x37\xa2\x58\xbc\x83\x15\xea\x65\xe6\xcc\xd4\x0a\xd2\xf2\x5b\xce\xf4\xd2\x85\x5b\x8c\xb7\x30\xc7\xe7\x94\xd2\x4c\xea\x46\x21\x17\x4d\x07\xa3\x45\x9d\x30\xcd\x5c\x34\xc5\x78\x0b\x53\xb3\x85\x8a\xfe\xad\xdc\x22\x76\xc0\xf1\x2e\xe4\x29\xfe\x0f\xb8\xef\x09\xcd\x32\xa2\x30\x8c\xb4\xf9\x44\x86\x0d\xa6\x7b\xb9\x62\xf9\xb7\x01\x39\x4a\x45\xb3\x5f\xc4\x18\x29\xd4\xc1\x07\xdc\x3a\x26\x30\x8d\x3a\x16\xdf\x3e\xe2\xf8\xb5\x97\x94\x33\x32\x0d\x8c\x4c\x5d\x46\xd2\xf0\xa8\xac\xb1\xf4\x5f\x8c\xd5\x7f\x2c\xb7\x48\x99\x19\x39\x25\x97\x38\xe7\x1b\x67\x2c\x4a\xc8\x28\xde\x92\x0b\x1d\x25\x38\x33\x8b\x40\xe3\x46\x3b\x53\x8b\xc6\xc7\x7a\x4f\xf3\x15\x06\x09\x2a\x57\xc5\x2d\x86\xc7\x30\x9a\x4b\xec\x6c\x1c\x7e\x18\x5e\x94\xe9\x1c\xb0\xab\x74\x9f\xab\x22\x31\xb9\x30\x2b\x14\x5a\x45\xe4\x44\x26\x25\xdb\xee\x68\xdb\x08\x2d\xba\x55\x96\x38\xf5\x2b\xc6\x5b\x98\xe5\x8a\xdf\xdd\xb0\xd4\x9b\xa8\x6a\x1f\xee\x03\xe7\x99\xe2\x9b\xa2\x78\x45\x3e\x8f\x74\x51\xda\x53\xbd\x00\xee\x6c\x28\xe9\xbb\x76\xde\xf4\x11\xc7\x84\x18\x37\xc5\x49\x85\x8a\x37\x6d\x7e\xfc\xb5\x60\x86\x9a\x45\x6b\x9c\x45\xb9\xcc\x36\xdb\xa0\xf8\x3f\x52\x39\xc6\xde\x52\xd8\x45\x19\xa3\x0e\x57\x91\x96\x2c\x1e\xd0\xa3\x5e\x09\x34\xca\xcf\x96\x60\x63\x97\xbc\x7d\x75\xbe\x52\x9b\x3b\xab\x3c\xf7\x6c\x51\x0b\x5e\x0f\x93\x87\xc9\x64\xc4\x39\xb1\x3a\x55\x1a\xa1\xd8\x1c\xe1\x23\x1d\x4f\xc3\xd0\x4d\xd0\x65\xe9\x3d\x4d\x7a\x79\x3a\x28\x6c\xa6\x7b\x0e\x9d\x4e\xb6\x5e\x1a\x9b\xf1\x21\xa7\xd3\x10\x5e\xfe\x66\x6e\xde\x0f\x0a\xdd\xc3\xaf\xe1\x75\xc1\x54\x94\x6b\x19\x4c\x77\x23\x29\x8a\x60\x0a\x4c\x95\x21\xdb\xab\xe4\xc0\xb9\x36\x84\x97\x4a\xcb\x6a\x91\x2c\xbf\x1c\xae\x74\x8f\x7f\xc9\x9b\x14\x2f\x96\x81\x60\x6a\xd9\xd0\x85\xd8\xb6\x54\x7a\xb8\x09\x7b\xa0\x43\xbd\x70\xf8\x21\xfa\x00\x17\x38\x99\xb7\x18\xb7\x55\xdc\x7f\x4c\x2e\x94\xf8\xb9\x38\x12\xbf\xf9\x15\xe3\x37\xe6\xe6\xfe\x9c\x94\xba\xaf\xb4\x4a\x51\xd7\x27\xe6\xe2\x44\x7e\xd7\xd1\x73\x58\xc2\x79\x79\x7f\x97\x6b\x19\x86\xc2\xa4\x69\xb4\x32\x9a\xbc\xfc\x7a\x0a\x0f\xb7\x0d\x7f\x3a\x99\x97\x32\xe0\x0e\x7e\xc5\x38\x0c\x8b\xd3\x64\xcc\x72\x16\x73\xbd\x0d\x6c\xf9\x14\x08\xfa\x30\x2d\xc9\x4b\xd0\x85\x44\x1a\x73\x22\x92\xb0\x5b\x87\x83\xf7\x29\x5e\x71\x66\x8a\x74\xae\xb3\xc3\x12\xd0\x58\xf0\xd3\x87\x4a\xee\x74\x8f\xe3\x07\x2e\x01\xaa\x00\x54\x37\x9f\x6f\x7e\x29\x2a\xe8\x79\xf9\xc7\x1b\x8f\x86\xcd\xa8\xa0\xf4\xa5\x37\x16\x58\xf7\x33\x3b\x96\x77\xf0\x7a\x33\x9f\xcf\xe7\xd6\x5d\xde\x5b\x29\x83\x3f\x4d\xab\x9a\x4d\xff\x63\xaa\xd0\x82\xf7\x74\x83\x3b\x77\x06\x76\xa5\x4d\x77\x8b\xca\x8a\xe9\x78\xd9\xe1\xb2\x93\xd0\xf2\x77\x05\x9e\xc2\xdd\x7d\x07\xc5\x99\x58\x95\x73\xc3\x50\xe0\x3a\xb0\x24\xda\x04\x96\xda\x96\x04\x4a\x02\x95\x72\x5a\xb9\xfb\x64\xf6\x3e\xd2\x61\x97\x5f\xaf\x84\xe4\x94\x97\xda\xa5\x4e\x95\x39\x6e\xcd\x88\x24\x36\x52\xa2\xd0\xd1\x07\xdc\x42\x08\x65\x76\xc0\x1d\xbc\x78\x71\xa1\xb3\xfa\x40\x3f\x24\x52\xcc\x2a\xd5\x14\x59\x98\xc8\x8b\x22\x38\xe6\xfa\x2a\x0c\xdf\xd8\xd7\xe7\xf7\xc1\xf4\xc2\x88\xb5\x64\xb9\xcb\xe0\xf5\x92\xa7\x68\xf3\xba\x87\xd7\x0e\xff\xb7\x5d\x5a\x17\x8f\xa3\xa5\xd2\xe3\x95\x41\xc6\x35\xa1\x73\x14\x10\x5b\x87\x4e\x01\xe9\x3e\xcd\x44\xaa\x42\xaf\xb0\x38\x4e\x78\x58\x54\xf3\xa0\xfb\xd4\x56\x06\x2f\x77\x9a\xb9\x02\x53\xeb\x4f\xf1\x28\xc3\x19\x86\xc5\xad\x8f\xd1\xf3\x9b\x4a\x24\xc5\xf6\x77\x8c\x83\xe9\x51\xde\xe1\x73\x3b\x52\x7f\x84\xab\x62\x62\x7b\xc2\x45\x8f\x9d\x63\x77\xa0\xdc\xa2\x1e\xba\x33\xbf\xe7\x80\xb2\x78\x72\xa1\x50\xea\xc0\xe2\x79\x11\xa7\x99\x40\x2a\xa5\xca\x63\xc6\x83\xdb\x4d\xad\xdc\xb5\xbe\xbc\x82\x6f\x6f\xbd\x1e\x70\xf0\xb2\xaa\x75\x0b\xf3\xbc\xf5\x95\x2a\x1d\x4a\x5f\x69\x21\xe8\xf7\x5e\xfa\x87\xde\xa6\xd6\x79\x9d\x6b\x6d\x83\xc6\x2d\xbf\xfe\x72\xef\xe4\xef\xde\xde\x38\x80\x9d\x0d\xce\xe1\x4b\xc2\xb7\xa3\x96\x84\x47\xae\x05\xbe\x45\xc0\x13\xa2\xcb\xcb\x3d\x75\xf9\x53\xe5\xc5\xd5\xe1\x79\x61\xdf\xc8\xdb\x5b\xfa\x2a\x2d\xaa\xcd\xc0\xb1\x59\x61\x73\xb7\x12\xa1\xfc\xfe\xe8\xd8\x5f\x7f\x49\xdb\x81\x26\x11\xfb\xb5\xb6\xcd\x62\xa0\xd2\x3e\x5b\x62\x7d\x77\x40\x62\x0d\xbd\x9a\xa9\xcf\x62\xf6\xeb\x8c\xce\xd8\x13\x26\xe1\x90\x26\xc7\x9c\xdc\x6c\xad\xdd\xf4\x3e\x0c\x27\x9f\xfd\xa7\xde\xd3\x94\xf8\x0a\xa7\x44\xf0\x0c\xc9\x1f\x9c\x52\xf7\x94\xba\x47\xa5\xee\x9e\x17\xc3\xfd\x8d\xe4\xb1\xf9\xba\x47\xd0\xe1\xf5\xfa\x94\x84\x5f\x5f\x12\xba\x3a\x08\x3e\x41\x0a\xba\xc4\x9c\x12\xf0\xff\x38\x01\x5d\x8d\x26\xf5\xd2\x9d\x33\xbd\xac\x3f\xdb\x7b\xdc\xf6\x7b\xaf\x7a\x34\x61\x9a\xd5\x9f\x9b\x96\x86\x11\x6f\x25\x5c\x1a\xb8\x53\xb2\x0f\x6b\x2f\xe1\xa4\xaf\x9b\xb2\x0b\x69\xd3\x1d\xbb\x6b\x6e\xfb\xc1\xcd\xc1\x8f\xd3\xe6\x45\xde\x73\x73\xe8\x42\xda\x74\x8d\xa7\xdd\xc4\x4e\xb0\xff\xdd\x4b\xb7\x67\x66\x5f\x26\x1c\x1e\xe7\x1d\xef\x2f\x23\xc6\x4f\xeb\xdf\x7e\xf3\x4e\xdf\xc3\x83\x4e\xec\x33\xf8\x9c\x6e\xec\xbf\x01\xb6\xdb\x81\x9e\x60\x8d\x6a\xd8\x9d\xd6\x97\xaf\x65\x7d\xe9\xf7\x83\x55\x47\xc1\xdd\x7b\xeb\xbd\x6f\xdb\x1d\x4c\xac\x8c\xa5\x6f\x9e\x17\xd1\xad\xb7\xcf\xc3\x99\x5c\xf5\x8e\x3d\xe1\xfd\xb1\xc5\xd5\x3d\xd5\x3a\x80\xd3\x8d\xf1\x53\x26\xe9\x21\x37\xc6\x8e\xa6\x3f\xc7\x7d\xc5\xd1\x89\xe0\x60\x3f\x90\xbe\xa7\xd0\x3f\x63\xe8\xdb\x1d\x9a\xfd\x62\xf0\x54\xad\x04\x83\x62\x3d\x0b\x73\x0f\xf6\xe8\xac\x39\x75\x1d\x74\x9e\x53\xd7\xc1\xa9\xeb\xa0\xfb\x9c\xba\x0e\x4e\x5d\x07\xf6\x82\xd1\x69\xbb\x1f\x73\xf2\xed\x90\x78\x8e\x92\x1d\xc8\xf0\x76\xb5\x69\xd6\x1f\xb3\x7f\x6e\x11\xd8\x57\x0b\xf4\xd5\x2f\x67\x5f\x2f\xbf\x53\x96\x8b\xa8\xd3\xe4\xdb\xeb\xf8\x1f\xbe\x58\x6a\xba\xd3\x0b\x53\xaf\xaf\xde\x97\xed\xf6\x35\xf8\x29\x1b\xed\x9b\xd3\x78\xbb\x2d\x9e\x04\x13\x60\xd8\xcb\x7d\xbb\x9e\xfb\x52\xa9\x31\xc0\xa2\xdd\x8d\xb5\x71\xc9\xa5\x9e\xbb\x84\x0e\xa4\x4d\xe7\x73\xff\x80\xeb\x7b\x6e\xf7\x6c\x78\xfc\x48\x5d\x97\xd9\xcd\xb0\x75\x23\xac\x95\x71\xce\x5f\x2c\x3c\x76\x57\xdf\x67\x7a\xda\xb7\x7f\xbe\x7d\xfb\xf0\x6f\x4b\x46\x14\xe5\x61\x06\xbe\x2d\xb8\x17\xc9\x5f\x45\x7b\xbf\x4f\x71\xaa\x63\x61\xb9\x2e\x64\xeb\x9f\xae\x8c\xbd\x82\x7f\x8a\x0b\xb9\xae\xec\xe7\xae\x66\xc7\x5d\x91\x9f\xee\x12\xbf\x9a\xbb\xc4\xee\x4f\xa2\xc6\xdf\x97\x37\x24\xee\xfc\xe1\x43\x9d\x9b\xa4\xc0\x7f\x03\x00\x00\xff\xff\xb0\xa6\xef\xd7\x53\x45\x00\x00")

func assetsCore_api_guestRsBytes() ([]byte, error) {
	return bindataRead(
		_assetsCore_api_guestRs,
		"assets/core_api_guest.rs",
	)
}

func assetsCore_api_guestRs() (*asset, error) {
	bytes, err := assetsCore_api_guestRsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/core_api_guest.rs", size: 17747, mode: os.FileMode(436), modTime: time.Unix(1615708949, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsGpuApiGuestDTs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x8f\xc1\x6a\x5b\x31\x10\x45\xf7\xfe\x8a\x8b\x37\x71\x21\xf1\xdb\x1b\xb2\x48\xa1\x01\xef\x42\xfb\x05\xb2\x34\x92\xa6\x3c\x8d\xd4\xd1\x88\xc6\x94\xfe\x7b\xd1\x73\x43\xb3\x29\xdd\x75\xa9\x99\x73\xee\x5c\xed\x96\x05\x76\x6d\x84\x40\x91\x85\x8d\xab\x74\xc4\xaa\x28\x35\x8c\x95\x70\x97\xda\xb8\xdb\x2d\xcb\xe4\x70\xad\x03\xde\x09\x46\x27\x58\xa6\x82\xcb\x15\x2e\x04\x96\x04\xcb\xdc\xe1\x6c\x8e\x71\xa1\xc4\x22\x73\x5a\xe3\x74\x14\x5f\x3b\x22\xaf\x84\xd3\x16\xb3\x2c\x0b\x94\x22\x29\x89\x27\x34\x67\xf9\x71\x7f\x5c\x52\x1b\x0f\xae\xf1\x43\x1a\xd4\xed\x18\x8e\xd6\xf7\x6f\x77\x2d\x93\xdc\xa3\x73\x69\xeb\x15\x5c\x5a\xd5\xdb\xa1\xdf\x1d\x2d\x6b\x1d\x29\x6f\x23\x1d\x62\x5c\x08\x4f\x2f\xe7\x4d\xf5\x55\xba\x21\xb5\x81\x47\x28\x7d\x1b\xac\xf4\xd4\xf8\xb0\x4f\x6d\xec\x3f\xcc\xfc\x40\x7e\x75\x4a\x88\x43\xfc\xfc\xfd\x7b\x4a\x5c\xa1\x13\x6e\x2c\x4e\xf8\xb1\x03\x66\x62\x69\xc3\xe8\x4b\x76\x81\xf4\xd0\x1b\x79\x8e\xec\xdd\x74\x4f\xe8\xa6\x2c\x69\xc2\x32\xca\x85\xf4\x66\x28\x39\xa3\x73\x71\x89\x9e\xb5\x96\xcf\xe9\xe2\x9e\xd7\xea\xec\x85\x5f\x69\xed\x87\xef\x1c\x2c\xbf\x09\xf7\xc8\xc4\x29\xdb\x9f\x77\xdb\xa8\x4f\xaf\x3e\x3b\x49\xf4\x71\xc4\x48\x7a\x0e\xef\xf6\x92\xfe\xb6\xfc\x47\x8f\xff\x5e\xe2\xe7\xaf\x00\x00\x00\xff\xff\xed\xce\x2a\x2f\x6e\x02\x00\x00")

func assetsGpuApiGuestDTsBytes() ([]byte, error) {
	return bindataRead(
		_assetsGpuApiGuestDTs,
		"assets/gpu-api-guest.d.ts",
	)
}

func assetsGpuApiGuestDTs() (*asset, error) {
	bytes, err := assetsGpuApiGuestDTsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/gpu-api-guest.d.ts", size: 622, mode: os.FileMode(436), modTime: time.Unix(1615708949, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsGpuApiGuestH = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\x41\xab\x13\x31\x14\x85\xf7\xf9\x15\x61\xba\x99\x48\x71\xa1\x4b\x45\x28\xcf\x2e\x04\xfb\x2a\x6d\x1f\xba\xbb\xa4\xc9\x4d\x72\x61\x26\x19\x92\x1b\xad\xff\x5e\xea\x14\xed\x4c\x2b\xea\xe2\xcd\x6a\xb8\xe7\xdc\x73\xbe\x84\x88\x05\xb9\x68\xd1\x49\x3f\x54\xd0\x03\x41\x10\x0b\x8b\x8e\x22\x5e\x4d\xc4\x82\xa2\xe9\xaa\x45\xf9\xb6\xb0\xa5\xc8\x2f\xc3\x3b\xf1\xcb\xf7\x79\xb5\xdf\xc0\xfa\xcb\xa7\xed\xee\x20\x6f\x3f\x3c\x31\xe6\x28\x01\x34\x73\xa6\x63\x65\x04\x68\xdb\x5a\xd0\x2a\x35\x9f\x7e\xa5\x42\x47\xea\x88\xbf\xcb\xb6\xb1\xe8\x74\xed\xb8\x51\x4a\xdd\xab\x82\xd5\xbe\x7d\x5c\x6d\xd6\xea\x77\xd5\x35\xc8\x2c\x19\x4f\x43\xca\x0c\x51\xf7\x38\x6e\xcd\x43\x3f\x6c\xce\x6b\xed\x66\xfb\xfe\xe9\xe3\x7a\x79\x15\x3c\x0b\xa2\xfe\x67\x50\x9f\x6c\xed\xf0\x62\x57\xb7\x27\xb9\xd8\xfe\xdc\xf7\xb0\x7d\xdc\x1f\x76\x4f\x0f\x87\xed\x6e\x7a\x5f\xb3\x20\x93\x62\xe1\x5c\x0d\xa7\xac\x94\x10\xd7\xac\x8d\x1f\x6a\xb3\x94\x8d\x49\xfd\x70\x76\x97\xa0\x2d\xe6\x46\xc9\x4a\x91\x5f\xbf\x02\x96\x53\x65\xcc\x92\x26\xe8\x2c\x5f\x94\x01\x0d\x39\x32\x9a\x29\x45\x28\x9c\x29\xfa\xa5\xa4\xc8\x72\xaa\x74\x18\x3d\x07\xf5\xe6\x7e\x73\x46\xcd\x08\xd4\x6b\x8f\xe0\x72\xea\x21\xfb\xa3\x06\xd7\x25\xcd\x30\xd0\x09\xbb\x32\xc1\xf9\xbb\xbd\x3d\x13\x7c\x23\xcb\x61\x84\x09\x48\x3e\xf0\xf8\x3f\x3a\x00\x4f\x26\xe8\xe8\x11\x8e\xd5\x39\xcc\x40\xf6\x22\x47\x7f\x47\xfb\x77\xf2\xff\xc1\x7e\x76\x66\xb1\xc0\x68\xc9\x89\xf3\x8b\xf8\x11\x00\x00\xff\xff\x48\xa9\x34\x61\xa3\x03\x00\x00")

func assetsGpuApiGuestHBytes() ([]byte, error) {
	return bindataRead(
		_assetsGpuApiGuestH,
		"assets/gpu-api-guest.h",
	)
}

func assetsGpuApiGuestH() (*asset, error) {
	bytes, err := assetsGpuApiGuestHBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/gpu-api-guest.h", size: 931, mode: os.FileMode(436), modTime: time.Unix(1615708949, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsGpuApiGuestSyms = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xca\xc1\x0a\x80\x20\x10\x04\xd0\x7b\x3f\x39\x4c\x36\x9a\xe0\xb2\xb2\x6e\xd0\xe7\x77\x0e\xbc\xbf\xe2\x36\x9f\x14\xd6\xcd\x4b\x71\x94\x10\x53\xe8\xc6\x26\xd4\x70\x43\xb4\x93\xa8\xc3\x99\x98\xfd\xd5\x58\x3b\xf3\x07\x5f\x00\x00\x00\xff\xff\x1b\x12\x33\xb6\x54\x00\x00\x00")

func assetsGpuApiGuestSymsBytes() ([]byte, error) {
	return bindataRead(
		_assetsGpuApiGuestSyms,
		"assets/gpu-api-guest.syms",
	)
}

func assetsGpuApiGuestSyms() (*asset, error) {
	bytes, err := assetsGpuApiGuestSymsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/gpu-api-guest.syms", size: 84, mode: os.FileMode(436), modTime: time.Unix(1615708949, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsGpu_api_guestRs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x53\x61\x8b\x13\x31\x10\xfd\xbe\xbf\x62\x38\xc1\xdb\x96\xd6\xc2\xdd\x17\x49\x51\x50\x39\x50\x50\x10\xbf\x8a\x84\x6c\x32\x9b\x1d\xcc\x26\x4b\x32\xa1\x2d\xa5\xff\x5d\xb2\xdb\xa2\x55\xab\xe7\x07\xf5\x0a\x65\xc3\xbc\x37\x2f\x6f\xe6\x91\x2a\x27\x84\xc4\x46\x08\x1d\x9c\x43\xcd\x14\x7c\x12\xe2\xb5\x4a\xdd\x3b\x35\xac\xbf\xc2\x14\x84\xd8\xbf\xca\x31\x85\xb8\x80\x0f\xa8\xcc\x61\x02\x9b\x1d\x63\x88\x06\xa3\x10\xfb\xb7\xc4\xec\xf0\xce\x1b\x52\x7e\x22\xbd\xdc\x31\xa6\xbb\x2d\x1f\xd6\x55\xb5\x9a\xcf\x2b\x98\xc3\xb5\x1d\xf2\x35\xd8\x8c\x89\xe1\xc5\xfb\x37\xd0\x90\x37\xe4\x6d\x82\x36\x44\x88\x39\x71\x21\x95\x3f\x31\x68\xe5\xa1\x41\xd0\xca\x39\x34\xd0\xc6\xd0\x8f\x0c\xd0\xc1\x20\xe8\xd0\x0f\x54\xea\xe4\x39\xc0\x46\xa5\x1e\x94\x37\x80\x5b\xd4\x99\xd1\x40\xb3\x83\x7e\xb7\x0c\x1b\xbf\xd4\x2e\x27\xc6\x78\x12\xde\x85\x3c\x2a\x17\xfb\xc4\x85\xa7\x4c\xb1\x00\xdc\x29\x06\xf2\x85\x30\x59\x81\x14\x72\xd4\x08\x2d\x39\x4c\xa0\x18\xb8\x43\x68\xd0\x92\xf7\x85\x2f\x4e\x8a\xd0\x07\x03\x76\xc8\x52\x0d\x24\xc7\xd1\xd6\x63\xb9\xdc\x70\x56\x16\x62\x5e\x90\x55\x55\xad\x56\x40\xfd\x10\xe2\xa4\x39\x2d\xa5\x0f\x26\x3b\xac\x86\xdc\x8c\x82\x51\x6d\x60\x5f\x01\x00\x3c\xfa\xe8\xc8\x7f\xae\xcb\x8c\x72\xea\x92\x13\x17\x9e\xc1\x95\x1d\xf2\xd5\xec\xd3\xc8\xc3\x2d\x63\xf4\xc7\xa6\xf2\x2b\x52\xad\x1f\x57\x95\x19\x65\xea\x94\xc1\x58\xa7\x01\x35\xb5\xa4\x55\x49\x5b\x26\x8e\xe4\xad\x80\xb9\x0e\x3e\x31\xe4\xa7\x0b\x38\x27\x38\xf4\x96\x3b\x01\xf9\xf6\x66\x06\xcb\xe7\xe5\xbb\xfe\xe1\x86\x88\x8a\x51\x52\xaf\x2c\xca\x12\x94\x8c\xb6\x51\xb2\x75\x41\xb1\x1c\x68\x8b\x2e\xd5\x1b\x32\xdc\x89\x7c\x7b\xb3\x80\x0e\xc9\x76\x3c\x9d\x27\x54\xe2\x56\x77\xca\x5b\x94\x4d\x6e\x5b\x8c\x92\xcc\x11\xf6\xf6\x02\xf6\x27\x66\xfe\x95\x93\xd1\xca\xa1\x3a\x54\xd5\x3d\x56\x2f\xe0\x71\xe2\x78\x6a\x3e\xc6\x96\x7d\x52\x2d\xc2\xbe\xc4\x5f\x5e\xe5\xe5\xf6\x27\x2a\xc9\xf2\xfc\x52\x3d\x2b\xc7\x81\x63\x3d\xfb\x2e\xbb\x6f\x29\x0e\x7d\x3d\x03\x95\xa6\x1c\xcf\x3c\xfe\xc7\xf0\x7e\x3e\xf5\x7d\x0d\x9d\xcc\xfc\xc2\xc8\x25\x13\xbf\x5d\xc1\xc3\x9a\xff\xaf\x0c\xff\x25\x00\x00\xff\xff\xbe\xb6\xb9\x2a\xfe\x05\x00\x00")

func assetsGpu_api_guestRsBytes() ([]byte, error) {
	return bindataRead(
		_assetsGpu_api_guestRs,
		"assets/gpu_api_guest.rs",
	)
}

func assetsGpu_api_guestRs() (*asset, error) {
	bytes, err := assetsGpu_api_guestRsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/gpu_api_guest.rs", size: 1534, mode: os.FileMode(436), modTime: time.Unix(1615708949, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsJwtApiGuestDTs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8f\xb1\x6e\xf3\x30\x0c\x84\x77\x3f\xc5\xc1\x4b\xf2\x03\x7f\xa2\xdd\x40\x86\x8c\xed\xd4\x57\x50\x6c\xca\xa6\x61\x53\x2e\x45\x55\x30\x8a\xbe\x7b\xa1\xb8\x05\xba\x11\xc7\xef\xee\xc8\xc6\x39\xd8\xbe\x11\x06\x0a\x2c\x6c\x1c\x25\x21\x44\xc5\x1a\x87\xbc\x10\x4e\x73\xb1\x53\xe3\x5c\xe5\xb0\xc7\x8c\xde\x0b\x72\x22\xd8\x44\x2b\x1e\x3b\xfc\x30\xb0\x8c\xb0\x89\x13\xbc\x55\x19\x0f\x1a\x59\xa4\xaa\x31\x54\x8f\x62\x4e\x08\xbc\x10\xba\x67\x8c\x73\x0e\x4a\x81\x94\xa4\x27\x6c\xde\xa6\x5b\x7b\x75\x73\xb1\x8b\xdf\xf8\x32\x66\x4a\x76\x1d\xae\x96\xda\xdf\x5e\x9b\x48\xfe\x23\xf1\xba\x2d\x3b\x78\xdd\xa2\x1e\x45\x3f\x37\xda\xa4\x31\x8f\xd3\x53\xd2\x2c\xc6\x2b\xe1\xfe\xf6\xf2\xb4\xf6\x51\x92\x61\x2e\x86\x1b\x94\xde\x33\x2b\xdd\x37\x3e\xb7\x73\xb1\xf6\x5f\xcd\x1f\xa8\x5f\xbc\x12\x42\x96\xbe\x7e\xff\x97\x12\xbf\x52\x87\x83\x45\x87\xcf\x06\x00\x3e\x48\x39\xec\xaf\xc5\xce\x73\xb1\x0e\xc9\x94\x65\xac\xeb\x63\x6a\xbe\xbe\x03\x00\x00\xff\xff\xb2\x22\x70\x08\x53\x01\x00\x00")

func assetsJwtApiGuestDTsBytes() ([]byte, error) {
	return bindataRead(
		_assetsJwtApiGuestDTs,
		"assets/jwt-api-guest.d.ts",
	)
}

func assetsJwtApiGuestDTs() (*asset, error) {
	bytes, err := assetsJwtApiGuestDTsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/jwt-api-guest.d.ts", size: 339, mode: os.FileMode(436), modTime: time.Unix(1615708949, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsJwtApiGuestH = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xcd\x4e\xc3\x30\x10\x84\xef\x7e\x0a\x2b\xb9\xc4\xa8\xe2\x00\x47\x10\x52\x55\x7a\x40\x22\x0d\x4a\x52\xc1\xcd\x4a\xe3\x75\xb3\x55\xb2\xa9\x9c\x75\x7f\xde\x1e\xa5\xad\x68\x48\xc1\x37\x8f\x66\xbf\x19\x7b\x45\x88\x96\x0c\x58\xb9\xd9\xb3\x2e\xb6\xa8\x2b\x11\x1a\xb0\x48\x30\x50\x44\x88\x54\xd6\xde\x80\x7c\xee\xd8\x20\xf1\x7d\xf5\x22\x7e\x7c\x9f\xd3\x2c\xd6\xf3\xaf\x8f\x24\xcd\xe5\xed\x81\x03\x83\x23\xa9\x75\xc1\xec\x70\xe5\x19\xb4\x8e\x22\xdf\x81\x51\x6a\xac\xee\xb0\xc3\x15\xd6\xc8\x47\x19\x05\x06\x6c\xe1\x6b\x0e\x94\x52\x7f\x45\xe9\x69\x16\x2d\xa6\xf1\x5c\x5d\xa3\x86\x45\x46\x64\x38\x6c\x5b\xc7\x9a\x8a\x06\xce\x53\x63\xe8\x5b\xdc\x8f\x45\x71\xf2\xba\x7c\x9f\x4f\x06\xe0\x11\x08\x9b\x13\xa8\x69\x8d\xaf\xe1\x62\x57\xb7\x2f\xb9\xd8\xfe\xcf\x9b\x25\x8b\x2c\x4f\x97\xb3\x3c\x49\x7f\xff\xd7\x08\x54\xb6\xd4\xb1\xf3\x25\xb7\x4e\x29\x21\x86\x5d\x83\xcd\x9e\x83\x89\x0c\x76\xe0\xd0\x1e\x75\x7f\x53\xd2\x23\xf1\xe3\x83\x66\x79\x55\xcf\x0c\x59\x56\x85\x93\x77\xfd\x52\x3b\x76\x48\xeb\x89\x44\xe2\xd3\x92\x6b\xa0\x35\x57\xea\x49\x88\x10\xc8\xa0\x15\x7d\x8f\xef\x00\x00\x00\xff\xff\x7f\xc8\x64\x41\x19\x02\x00\x00")

func assetsJwtApiGuestHBytes() ([]byte, error) {
	return bindataRead(
		_assetsJwtApiGuestH,
		"assets/jwt-api-guest.h",
	)
}

func assetsJwtApiGuestH() (*asset, error) {
	bytes, err := assetsJwtApiGuestHBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/jwt-api-guest.h", size: 537, mode: os.FileMode(436), modTime: time.Unix(1615708949, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsJwtApiGuestSyms = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x4b\x2d\xca\x4c\xab\x8c\xcf\x2a\x2f\xe1\x02\x04\x00\x00\xff\xff\x39\xf7\x84\x8b\x0b\x00\x00\x00")

func assetsJwtApiGuestSymsBytes() ([]byte, error) {
	return bindataRead(
		_assetsJwtApiGuestSyms,
		"assets/jwt-api-guest.syms",
	)
}

func assetsJwtApiGuestSyms() (*asset, error) {
	bytes, err := assetsJwtApiGuestSymsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/jwt-api-guest.syms", size: 11, mode: os.FileMode(436), modTime: time.Unix(1615708949, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsJwt_api_guestRs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x93\xe1\x6b\xdb\x30\x10\xc5\xbf\xfb\xaf\x78\x74\xb0\xda\x21\x6d\xc6\xba\x0f\x45\x59\x0a\xdb\x28\x6c\xb0\xb1\xd1\x7d\x1c\xc3\x28\xf6\x29\x51\x6a\x4b\x41\x3a\xcd\x09\xc1\xff\xfb\x90\x9c\xae\x49\xda\xc2\x04\x21\x89\xde\xbb\x77\xbf\x3b\xec\x2c\x78\x82\xe7\x5a\x88\xca\x36\x0d\x55\xac\xad\xf1\x42\x7c\x96\x7e\xf9\x4d\xae\xa7\x8f\xb2\xb6\x42\xec\x3e\x05\xe7\xad\x1b\xe3\x8e\x64\xdd\x0f\xe2\x7c\xcb\x64\x5d\x4d\x4e\x88\xdd\x57\xcd\xdc\xd0\xad\xa9\xb5\x34\x83\xe9\xe3\x96\xc9\xdf\x6e\xb8\x9f\x66\xd9\x64\x34\xca\x30\xc2\xf9\xaa\xe3\x73\x2c\x02\x79\xc6\x87\x1f\x5f\x30\xd7\xa6\xd6\x66\xe1\xa1\xac\x83\x0b\x9e\xa3\x29\x7e\x34\xa3\x92\x06\x73\x42\x25\x9b\x86\x6a\x28\x67\xdb\xe4\x40\x65\x6b\x42\x65\xdb\xb5\x8e\xf7\xda\xb0\x45\x27\x7d\x0b\x69\x6a\xd0\x86\xaa\xc0\x54\x63\xbe\x45\xbb\xbd\xb0\x9d\xb9\xa8\x9a\xe0\x99\xdc\x43\xf0\xd6\x86\x94\x1c\xf1\x35\x47\x9f\xac\x23\x02\x78\x29\x19\xda\x44\xc3\x80\x02\x6f\x83\xab\x08\x4a\x37\xe4\x21\x19\xbc\x24\xcc\x69\xa1\x8d\x89\x7e\xf1\x90\x88\xd6\xd6\x58\x75\x5c\xca\xb5\x2e\xd3\x68\xd3\x74\x1d\x3b\x1c\x5d\x0b\x31\x8a\xca\x24\xcb\x26\x13\xe8\x76\x6d\xdd\x90\x39\x2c\xa5\xb5\x75\x68\x28\x5b\x87\x79\x0a\x74\xb2\xc3\x2e\x03\x80\x57\xbf\x1a\x6d\xee\xf3\x38\x63\x39\x54\x95\x83\x17\x33\x9c\xad\x3a\x3e\x2b\x7e\x27\x1f\x6d\x98\x9c\xd9\x17\xc5\x13\xa3\x94\xc1\x1f\x72\x5a\x6d\xcb\x55\xc7\x79\xc4\xf1\xec\xb4\x59\x08\x8c\x2a\x6b\x3c\x23\x5c\x8f\x13\x65\x43\x66\xc1\x4b\x81\x70\xf5\xb6\xc0\xc5\x4d\xfc\x9e\x66\x29\xaa\xcf\xfa\x2c\x7b\x36\x4b\xe0\xb5\x67\x97\xec\x77\xe4\x43\xc3\xef\x7f\xa6\xf0\x71\xac\xbe\xd9\x93\x34\xc4\x70\x49\x2d\xe7\x41\x29\x72\xa5\xae\x31\x43\x30\x5e\x2a\xc2\x2e\x0e\x2a\xc4\x71\xee\xa5\xf4\x65\x7c\xb4\x7c\x5e\xc4\x9f\x6b\x76\x79\x91\x28\x0f\x85\x86\x4c\x5e\x40\xfa\x81\xb8\x9f\xa6\x66\x5a\x3d\xd3\x6b\x86\x37\x1b\xa5\x94\x3a\x58\xcd\xad\x73\xf9\x55\xb1\x1f\x2f\x2d\xaf\xf1\x74\xa0\x3f\x81\xc6\x0c\x8e\x64\x5d\xd2\xa6\x5a\x4a\xb3\xa0\xfd\x75\x7e\xda\xad\x98\xfe\xcb\x68\x25\x57\xcb\x93\x94\xc7\x0e\xf1\x7c\xbf\x3f\xae\x2f\x30\xbb\x39\xb1\x1c\xc3\x60\x86\x61\xc3\x42\xc4\xf7\xa1\x0c\xac\xae\x4f\x22\x2e\x83\xe9\x9c\x5c\xe7\x07\x20\x0f\x67\x32\x51\x8e\xfe\x87\xfc\x09\x5f\x71\x24\xf5\xe3\xa3\xbf\x71\x97\xe4\x5e\x82\x8f\xea\xbb\x17\xeb\xfb\xc7\x27\xec\x6f\x00\x00\x00\xff\xff\xf5\xc1\xcb\x0a\x8d\x04\x00\x00")

func assetsJwt_api_guestRsBytes() ([]byte, error) {
	return bindataRead(
		_assetsJwt_api_guestRs,
		"assets/jwt_api_guest.rs",
	)
}

func assetsJwt_api_guestRs() (*asset, error) {
	bytes, err := assetsJwt_api_guestRsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/jwt_api_guest.rs", size: 1165, mode: os.FileMode(436), modTime: time.Unix(1615708949, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsMy_own_cluster_guest_apiRs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\xdd\x6f\xdb\x36\x10\x7f\xf7\x5f\x71\xc8\xb0\x54\x0e\x12\x27\x6b\x8b\x22\x50\xa2\x00\xdb\x50\x60\x05\xb6\x75\x68\x81\xbe\x14\x85\x20\x4b\x27\x9b\xa8\x4c\x09\xfc\xa8\x93\x05\xfe\xdf\x07\x7e\x48\x26\x25\x4a\x76\xd2\x3d\x56\x40\x63\x89\xbc\xcf\x1f\x8f\x77\xe4\x55\x72\x04\x2e\x8a\x38\xce\xeb\xaa\xc2\x5c\x90\x9a\xf2\x38\xfe\x23\xe3\xeb\xbf\xb2\xe6\x66\xd6\x4d\x93\x3a\x8e\x1f\x7f\x97\x8c\xd7\xec\x1c\x3e\x60\x56\xec\xcc\xe4\xf2\x41\x60\xcd\x0a\x64\x71\xfc\xf8\x27\x11\xa2\xc2\xb7\xb4\x20\x19\x35\x44\xbf\x3d\x08\xe4\x6f\xef\xc5\xee\x66\x36\xbb\x3c\x3b\x9b\xc1\x19\x6c\x1e\x2e\xea\x2d\xbd\xc8\x2b\xc9\x05\x32\x58\x49\xe4\x02\x7e\xfd\xe7\x1d\x2c\x09\x2d\x08\x5d\x71\x28\x6b\x06\x4c\x72\xa1\xa8\xd5\xbf\x77\x02\xf2\x8c\xc2\x12\x21\xcf\xaa\x0a\x0b\x28\x59\xbd\xd1\x14\x90\xd7\x05\x42\x5e\x6f\x1a\xa2\xc6\x09\x15\x35\x6c\x33\xbe\x81\x8c\x16\x80\xf7\x98\x4b\x81\x05\x2c\x1f\x7a\x4a\x67\x70\x76\x39\x9b\x5d\x5e\x02\xd9\x34\x35\x13\x20\xd6\x08\x2f\x7c\x92\x17\xb0\xa9\x0b\x59\xe1\xac\x91\x4b\xf5\x0a\x2c\xdb\xc2\xe3\x0c\x00\xe0\xa7\xcf\x15\xa1\x5f\x23\xa5\x27\x35\x02\x52\x43\x0b\x09\x9c\xf8\x52\x4e\xe6\x5f\x34\x0b\xde\x0b\x64\xd4\xf2\xab\x47\x49\x2d\x29\x34\x8c\x50\x91\x16\xb8\x94\xab\x68\x29\xcb\x12\x59\x0c\x67\x79\x4d\xb9\x00\x79\x7d\x0e\x15\xd2\x95\x58\xc7\x20\x5f\xbd\x9c\xc3\xc5\x9d\xfa\xbd\xe9\x8b\x58\xa1\x48\x05\xd9\x60\xa4\xfe\x70\x91\x6d\x9a\x18\xce\x36\x52\x00\x79\xf3\x7a\x94\x29\x67\x98\x09\x4c\xf1\x3e\x5f\x67\x74\x85\xa9\xd1\xfd\x5c\x13\x18\x66\xc5\x88\xac\x94\x14\x9a\xf7\x1c\x9e\x2a\xfb\xf2\x12\x18\x0a\xc9\x28\xd7\xcb\xd3\x8a\xb7\x72\x80\x14\xb0\x5d\x23\x43\x58\x63\x56\x20\xe3\xb0\xce\xbe\x21\x2c\x11\x29\xe4\x75\x43\xb0\x80\x9a\xc1\xd5\x7d\x59\x96\x25\x90\x12\x90\xb1\x9a\x85\xa0\xb3\x66\x5a\x29\x3d\xab\x47\x3d\xde\x32\x32\x0a\xdf\xf3\x5d\x9e\x12\x6e\x2d\x1c\xe8\xa0\xd9\x06\x3d\x0d\x6a\x20\x75\xd4\x9c\xc3\xb7\xac\x92\x3e\x8d\x1e\x49\x8f\xb1\xa5\x64\x38\xe2\x9e\x66\x21\x23\x01\x49\x68\x23\x3b\x6c\x49\x11\x4d\x46\x6f\x2d\xc5\x13\xa8\x25\xab\x9e\x1b\xa7\x0d\x32\x4e\xb8\x40\x9a\x63\xca\x51\x44\x5f\xf1\x21\x0d\x88\x52\xc3\x43\x00\x43\x94\x47\xe0\x78\x38\x8c\x0f\xc7\xa9\x6b\xf7\xea\x68\xbb\x8f\x82\x41\x21\xca\xe5\x52\xa1\xd1\x30\x2c\xc9\x7d\x48\xb0\x9d\x09\xca\x1e\x08\xaf\xe4\x2a\x2d\x49\x85\xd1\x06\xc5\xba\x2e\x42\xf2\xec\x8c\x87\x71\x93\x89\x75\x50\xb7\x1a\xf7\x28\xf3\x9a\x0a\xa4\x22\x15\x0f\x4d\x70\x51\xbc\x79\x8f\x53\x95\x2a\x1e\x62\x31\x13\xc7\x60\xb7\xcc\x38\xbe\x79\x9d\x16\xa8\x0a\x4f\x84\x54\xfd\x04\x7d\x6c\xa7\x3c\x03\x18\x72\x59\x89\x10\xb9\x9d\x19\x35\x61\x37\xdb\xcd\x66\x53\x36\xc4\x70\xca\x05\xd3\x4c\x1f\xb4\xac\xdb\x4f\x98\xdf\xca\xeb\xbb\x73\x3d\x71\x67\x6b\x4f\x85\xc2\x86\x5e\xca\xc9\xbf\xaa\x62\x49\xca\xb3\x12\xe1\x51\x15\xb8\x38\x0e\xca\x5e\x64\x3c\x6d\x04\x8b\xe6\x9d\x5b\x8b\x0a\x69\x34\x87\x8c\x1b\xbf\xf4\x01\xa1\x11\x2c\x8e\xa9\xac\x2a\x45\x77\x35\x87\xdd\x4d\xa7\x51\x95\xa3\x42\x95\xf9\x04\x3e\x61\x1e\xc7\x5b\x22\xd6\x69\x9e\x35\x59\x4e\xc4\x43\xe4\xda\xa3\x24\xaa\x97\xb9\x61\x56\x4c\x0b\x86\x6a\x24\x48\xa6\x14\x19\xca\xff\xc3\x0d\xad\x6d\x4f\xe4\x28\xd4\xde\x68\x3d\xef\xbf\x46\x8a\x6c\xee\xac\x47\x3f\xe4\xcd\x52\x98\xd0\x6d\xdf\xdd\xa0\x6c\xc7\x74\xd4\xc5\x70\xfa\x59\x5e\x7f\xd1\x0b\xf7\x51\x30\x42\x57\xce\x4a\x19\x79\x90\xd8\x17\x65\x9b\x66\x8a\xe6\x7b\x6c\x95\x16\x48\xf4\x4f\x70\xde\xd5\x0c\x89\xf7\xe9\xd1\x77\x0c\x02\xf3\x75\x4a\x8a\x7d\x3e\x1e\x04\x49\xdf\x61\x07\x33\x3b\xe0\xe3\xda\xda\x66\x69\xf4\xa7\x4f\xd1\xb7\xca\x52\x7a\xc3\x3e\x87\xb6\xdb\x5d\x2c\xfd\xed\xd2\x78\x11\x68\x9d\x82\xc4\x1c\x56\xac\x6f\x19\x4f\xb9\xc6\x3c\x1a\x38\x6d\x11\x74\xeb\x5f\x88\x46\x13\xd9\x09\x37\x24\x86\x95\x06\x62\xb3\xea\xa6\x1a\x9b\xcd\xfa\xe8\x85\x6e\x97\x6b\x94\xc1\x8a\x23\x51\x7f\x07\x8b\xda\x52\x68\x41\x90\x98\xdf\xe1\x52\xaa\xc7\xac\xd6\xd0\x16\x07\x37\xf5\xe5\x23\xdb\xc9\xb3\x14\xe6\xdb\x43\x76\x98\x93\x02\x25\x0a\x9c\x94\xf4\xbe\x51\xf7\x8a\x5b\x13\xe0\x77\x4f\xf7\xdb\x23\x71\x03\x73\xe0\xe1\xea\xa0\x87\x0e\x8c\xa4\x74\x85\x25\x6d\x1d\xde\x5b\xa4\x9e\xbf\x6b\x8a\xdd\xc0\xae\x7b\xc3\x8a\x63\x8f\xd2\x5d\x95\x70\x98\xf5\xc3\xab\x7d\x82\xc7\x2c\xd7\x6f\xf5\x7c\xac\x37\x18\x69\xf9\xf3\x9e\x3d\xee\x4a\x1c\x77\xa8\xb5\xf7\x3b\xbb\x22\xe7\xfe\xc2\xb4\x29\xdb\x14\x25\x48\x5a\xea\x38\xa6\xb8\x6d\xc3\xb0\x5f\x4e\x02\x79\x62\xca\x94\x6e\x77\x1e\x5c\x03\x73\x7c\xb2\xc6\xb4\x91\xb7\xd7\xee\x63\x3d\x40\x78\x6f\x21\x24\xb0\x54\x61\xc1\x2b\x92\x63\x14\xd8\xdf\x03\xe0\x3b\x1c\x0a\xc5\x6c\xee\xbe\x06\x03\x43\xda\xa7\xcb\x25\x63\x2a\x5d\x99\xe0\xb7\xd9\x3c\x81\x93\x93\x85\xa8\xdb\x08\xe8\xf3\xd0\xa5\x55\xcf\x95\x23\x05\x5b\x68\x67\xe4\xab\x97\x71\x7c\xeb\x5e\xa7\xef\xa2\xf9\x42\xd2\x2d\xcb\x9a\xd6\xf4\xed\x9a\x54\xe8\xf2\xdf\xc1\x55\x6f\x33\xf9\x95\xfe\x68\xe9\x9e\x0c\x65\x64\x07\xe0\xd3\xaa\xb7\x57\x97\x0d\xdd\x82\xa3\x3e\xe5\x8c\xb0\x39\xfb\xab\xb5\x36\x3a\xdd\x5b\xd0\xcb\x80\x0a\x32\x83\x72\x1c\x97\xac\xde\xa4\x52\x94\xd7\x56\xb2\x82\xfc\x1b\xe6\xd1\x3c\xe8\x18\x29\x5d\xe0\x7e\x86\x97\x3a\xf2\x7a\xdb\xd9\x5d\xce\x04\xf8\x5e\xf7\x2e\xb4\xf9\x4d\x7c\x2e\x08\xe5\xc8\x44\xe4\xf0\x2e\xf2\xaa\xa6\xa8\x32\x11\x77\xec\xdf\xed\x8d\xf1\x42\xc0\xf9\xb8\x80\x5f\x6e\x5a\x1a\x37\xec\x8d\xa6\xf1\xe4\xeb\x1f\xe8\xdd\x34\xfc\x7d\xbb\x7e\x7f\xe4\x30\x82\x13\xfb\x32\xa8\x50\x47\xa4\x86\x49\x93\xdd\xb3\x82\x19\x08\xd6\xf5\x1f\x99\xe3\x47\xe6\xf8\x91\x39\xbe\x2b\x73\x4c\xf5\x6a\xc6\x4e\x69\x5d\x69\x1f\x30\x06\xcf\x22\xa3\xdd\x9d\x83\xf2\x87\x9c\xc3\x63\xa7\xd3\x3f\xe5\x6d\xa2\x73\x6e\xba\x2a\x2b\xa9\x15\x18\xa4\xa8\x2e\xb8\x5c\x94\x3a\xed\x5e\x5b\xf6\xf0\x45\x63\x78\x1c\xee\x9a\xb2\xa6\x4b\xf6\xe6\x75\x2f\xc7\x76\xbd\x5a\x88\xf5\x6c\x02\x57\x36\xc6\xc6\xe1\xd0\xf2\x4e\x3d\xee\xb9\x97\xd4\xba\x61\xc7\x90\xa9\xfe\xdd\x14\xfe\x63\xd9\xad\xef\x68\x30\x81\xee\x8f\x99\xb6\x07\x31\x75\xe0\xef\x65\x1a\xa5\x7c\xba\x9f\x1c\x6e\x37\xdc\x0c\x52\xcf\xb3\x1a\x0e\xf0\xa4\xa6\x43\x07\xd7\x21\x8b\x27\x3a\x0b\xbe\xde\x29\x80\x43\xf7\x88\x3d\xd4\x5e\xf3\x60\x98\xdb\xc2\x95\x6e\x9f\xe2\x7a\xc1\x2b\x59\x15\x49\x56\x39\x67\x07\x4f\x7e\x78\x25\xed\x6e\x93\xac\x1a\xbd\xb4\x0e\xee\x6e\x5d\x4b\xf7\xd8\x6d\x06\x7e\x5f\xe3\x49\x57\xad\x83\xd7\x2c\x2b\x74\xb0\x0a\x4f\xeb\xf7\xef\x3b\x3a\x87\xd2\xdc\x01\xb9\xad\xc8\x41\xe8\xf8\xc0\x1c\x67\xee\xf4\xff\x20\xb8\xcd\x09\x98\xec\x4e\x8c\x1b\xde\x6a\xf0\xaa\x9b\xe3\x8c\x37\xae\xd4\x3a\x61\xe2\xb8\x38\x49\xe6\xf7\x2a\x3c\xd2\x7e\x23\x64\x4c\xe4\x80\x2e\x9c\xcc\xff\x0b\x00\x00\xff\xff\x70\x45\x41\xea\x19\x1d\x00\x00")

func assetsMy_own_cluster_guest_apiRsBytes() ([]byte, error) {
	return bindataRead(
		_assetsMy_own_cluster_guest_apiRs,
		"assets/my_own_cluster_guest_api.rs",
	)
}

func assetsMy_own_cluster_guest_apiRs() (*asset, error) {
	bytes, err := assetsMy_own_cluster_guest_apiRsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/my_own_cluster_guest_api.rs", size: 7449, mode: os.FileMode(436), modTime: time.Unix(1615009997, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRestDefaultApiJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\xdf\x6f\xdb\x36\x10\x7e\xd7\x5f\x71\xd0\x4b\xa5\x20\x92\x83\x62\x18\x06\x17\x7e\x68\x9a\x0c\xf3\x30\xb4\x45\x13\x60\x0f\x45\x60\x50\xd2\x59\x26\x26\x91\x32\x79\x9c\x6d\xa4\xf9\xdf\x07\x52\x3f\x22\x29\x4a\x67\xaf\x58\xb7\x18\x28\xea\x1c\xbf\x3b\xde\xf7\xdd\xf1\x48\xcf\xce\xce\x3c\x38\x83\xdb\x0d\xd7\xc0\x35\xd0\x06\xe1\x9d\x54\x08\x9f\xae\x6f\x6e\xe1\xed\xc7\x25\x94\x87\x48\xee\x44\x94\x16\x46\x13\x2a\xe0\x65\x55\x60\x89\x82\x18\x71\x29\xac\xab\xfd\xb7\x24\x60\x45\x21\x77\x1a\x48\x02\xee\x31\x35\x84\x90\x30\xcd\x53\x90\x15\x2a\x87\xd5\x50\xf0\x3f\x10\xe6\xad\x4f\x04\x0a\x73\xee\x82\x32\x48\x0a\x99\xd4\xc6\xaa\x30\xba\x31\x00\xb3\xdf\xd6\x46\xa4\xed\x5e\x6e\x39\x1f\x2e\xf3\x02\xeb\xa5\x94\x15\xc5\x08\xdf\xe4\xc6\x35\x94\x8c\x8b\xe2\x00\x46\x63\x06\xc9\xa1\xe6\xf9\xdb\x12\x2a\x25\x73\xc5\xca\xf8\x11\x28\xa4\x2a\x59\x51\x1c\x20\x91\x46\x64\x96\x8f\xc5\xb6\xf4\x77\x98\x00\x8a\xac\x92\x5c\x10\x64\x46\x71\x91\x83\x26\xa6\xc8\x54\x10\x70\xe1\xb6\x89\x73\x19\x7a\x70\x36\xf3\xbc\xd9\x6c\x06\x0a\xd7\xa8\x50\xa4\x08\x15\xa3\xcd\xc2\x8f\x67\xa9\x54\x18\xb1\x8a\x47\xb9\x41\x4d\x71\x16\x93\xf6\x3d\x2f\x95\x42\x13\x94\x32\x85\x05\x28\xdc\x1a\xae\xf0\x6d\xc5\x83\x57\x16\xfd\x2a\xf4\xbc\x96\x16\xe4\x48\x4b\x51\x19\xfa\x84\x5b\xeb\x1f\x84\x70\xef\x01\x00\xfc\xc9\x14\x24\x66\xbd\x46\xb5\xcc\x60\x61\x23\xc5\x2d\xf4\xb2\x31\x07\xe1\x08\x79\x79\x20\xd4\x0d\x58\x21\xcb\xae\xf7\xe9\x86\x89\x1c\x6b\x87\xa0\x0d\x17\x7a\x9d\x9f\xc2\xed\x2d\xee\x09\x16\x20\x70\x07\xf6\xeb\x15\xa6\x32\x43\x15\xf8\x86\xd6\xd1\x4f\x7e\x18\x67\xce\x10\xf4\x76\x68\xfc\x15\x92\x51\x02\x7e\xbd\xf9\xf0\x3e\xae\x98\xd2\x18\x34\xd1\x42\xef\xa1\x47\xd0\x96\xf8\xe7\xe6\x8f\x01\x3b\x85\x5b\x58\x3c\xe5\x5f\x07\xb7\x14\x06\x9e\xce\x5a\x6f\xbb\x8d\x4b\xa4\x8d\xcc\xce\x07\x36\x5b\x8f\xa1\x45\xb0\x12\x87\x16\x57\xdb\x55\x9b\xda\x70\x2d\x63\xc4\xe0\xcb\x17\xf0\xfd\x47\xbb\xe3\xa6\xc9\xf6\x05\x5f\x1f\x2c\xbf\x98\x58\xae\x2d\xec\xfe\xa1\x56\xbf\x97\xef\x4e\x71\xc2\x91\xe6\x4d\xdd\x3e\x18\x1a\x14\xee\x7c\x1c\xfa\xbe\xdb\x53\x13\x23\xa3\xe7\x40\xca\x34\xd9\x3f\x84\x43\xc5\x5f\x5f\x5c\x3c\x55\x98\x17\xf8\x0f\xd4\xb5\x5e\xdf\xac\xec\xcb\x50\xc9\x08\xcb\xf8\x23\xa3\xcd\x69\x3a\xf5\xfc\x8e\x52\xea\x08\xbe\x37\x2e\xf9\x77\xf6\x58\x3d\xcb\xfc\xf5\xc5\x45\xf8\x5d\x34\x9b\xe8\x24\x42\x75\xbc\x46\x16\xb0\x76\x3e\xdd\xa0\xea\x85\xf9\xc6\x03\xf9\x92\xc4\xb4\x9f\x5a\x88\x15\xcf\xe6\x9d\x26\x93\x42\xd7\x4d\x35\x21\xf5\x06\x59\x86\xea\xf9\x21\xfe\x4b\xbd\x1e\x4c\xdf\x07\xe1\x54\x45\x9a\x90\x9f\xfd\x7d\x54\xca\x34\xb2\x3d\x1a\x55\x4c\xb1\x32\xaa\x41\x11\xcf\xfc\xbb\x71\xbf\x37\xa9\xb5\x61\xfe\xf7\x25\x98\x54\xb9\x7d\x91\x5c\x16\x32\x39\xad\xa1\x93\xde\x4d\x9a\x30\x8d\x3f\xfe\x50\xdf\x8b\x6e\xb8\x25\xbd\x4b\xd0\x82\x09\xd3\xcd\xf2\xea\x4d\x6d\xe0\x6b\x08\xda\x5e\x6f\xb7\xb4\x9f\x1a\xd4\xd5\xf5\x31\xb1\xdf\x39\x6d\xde\xb3\xb2\x37\x87\xa7\x8f\x4b\x6b\x4d\xa5\x20\x14\xb4\xa2\x43\x35\x5a\x75\x79\x75\x96\xf0\x4d\xad\x09\x60\xa1\xf1\x98\x44\x9e\x26\x70\xea\x56\xff\xfe\x90\x6f\x09\xb8\x13\x56\x33\x39\x6a\xf8\xdb\xc7\xe4\xe9\x8f\x10\x0b\xe0\xd6\x3e\x64\xd2\xcd\xb9\x54\x21\x7b\x42\x33\x1c\xb4\x81\x73\x0f\xbb\xdc\x9f\xd3\x66\x72\x97\xf3\xe9\xf6\xab\x43\xf6\x52\x94\x4e\xd1\xd3\x72\xec\x09\xa0\x4d\x41\x2d\xb8\x2f\xd3\x49\xa3\xdb\xbd\x9c\x56\xce\xe6\x0f\x71\x4c\xe5\xc6\xfe\xc2\x70\xef\x81\xcf\x77\xc3\xc5\x52\x66\xe8\x5c\x33\xae\x30\xed\xbb\x4e\x2b\xd2\x2d\x4f\x73\x1e\xdd\xc6\x52\xf3\xfd\xca\xfe\xa2\x58\xd9\xf4\xc7\x8f\xbb\x47\xc8\x30\x45\xdf\xbf\xeb\x5f\x3b\x8d\x48\x95\x14\x1a\x61\x01\x7f\xd7\x9d\xb5\x9e\xf3\xe6\xff\x71\xc2\xf3\x5e\x49\xaf\x45\xda\x4e\xcc\x89\xc7\xfa\x34\xc1\x66\xc2\x7f\xfd\xa4\x7d\xd7\x71\xdc\x4a\x13\xf6\xae\x88\xb5\xc2\xaf\x36\x76\x38\x85\x7c\x86\xf0\xe0\x18\xe3\xbe\x92\x8a\xae\x18\x31\x2b\xe1\xe0\x20\xe3\xbe\x6a\x9a\x78\x0c\xfa\x0f\xb5\xc2\x7d\x15\x7a\x0f\x7f\x05\x00\x00\xff\xff\x8b\x02\xc9\xce\x95\x0f\x00\x00")

func assetsRestDefaultApiJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsRestDefaultApiJs,
		"assets/rest-default-api.js",
	)
}

func assetsRestDefaultApiJs() (*asset, error) {
	bytes, err := assetsRestDefaultApiJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/rest-default-api.js", size: 3989, mode: os.FileMode(436), modTime: time.Unix(1615009997, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/core-api-guest.d.ts": assetsCoreApiGuestDTs,
	"assets/core-api-guest.h": assetsCoreApiGuestH,
	"assets/core-api-guest.syms": assetsCoreApiGuestSyms,
	"assets/core_api_guest.rs": assetsCore_api_guestRs,
	"assets/gpu-api-guest.d.ts": assetsGpuApiGuestDTs,
	"assets/gpu-api-guest.h": assetsGpuApiGuestH,
	"assets/gpu-api-guest.syms": assetsGpuApiGuestSyms,
	"assets/gpu_api_guest.rs": assetsGpu_api_guestRs,
	"assets/jwt-api-guest.d.ts": assetsJwtApiGuestDTs,
	"assets/jwt-api-guest.h": assetsJwtApiGuestH,
	"assets/jwt-api-guest.syms": assetsJwtApiGuestSyms,
	"assets/jwt_api_guest.rs": assetsJwt_api_guestRs,
	"assets/my_own_cluster_guest_api.rs": assetsMy_own_cluster_guest_apiRs,
	"assets/rest-default-api.js": assetsRestDefaultApiJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"core-api-guest.d.ts": &bintree{assetsCoreApiGuestDTs, map[string]*bintree{}},
		"core-api-guest.h": &bintree{assetsCoreApiGuestH, map[string]*bintree{}},
		"core-api-guest.syms": &bintree{assetsCoreApiGuestSyms, map[string]*bintree{}},
		"core_api_guest.rs": &bintree{assetsCore_api_guestRs, map[string]*bintree{}},
		"gpu-api-guest.d.ts": &bintree{assetsGpuApiGuestDTs, map[string]*bintree{}},
		"gpu-api-guest.h": &bintree{assetsGpuApiGuestH, map[string]*bintree{}},
		"gpu-api-guest.syms": &bintree{assetsGpuApiGuestSyms, map[string]*bintree{}},
		"gpu_api_guest.rs": &bintree{assetsGpu_api_guestRs, map[string]*bintree{}},
		"jwt-api-guest.d.ts": &bintree{assetsJwtApiGuestDTs, map[string]*bintree{}},
		"jwt-api-guest.h": &bintree{assetsJwtApiGuestH, map[string]*bintree{}},
		"jwt-api-guest.syms": &bintree{assetsJwtApiGuestSyms, map[string]*bintree{}},
		"jwt_api_guest.rs": &bintree{assetsJwt_api_guestRs, map[string]*bintree{}},
		"my_own_cluster_guest_api.rs": &bintree{assetsMy_own_cluster_guest_apiRs, map[string]*bintree{}},
		"rest-default-api.js": &bintree{assetsRestDefaultApiJs, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

